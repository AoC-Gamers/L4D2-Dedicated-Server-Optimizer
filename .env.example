# L4D2 Server Optimizer - Environment Configuration Example
# Copy this file to .env and modify as needed

# ============================================================================
# SYSTEM CONFIGURATION
# ============================================================================

# Debug mode - set to 1 to enable development features and detailed output
OPTIMIZER_DEBUG=0

# Timeout duration in seconds for each module execution
OPTIMIZER_TIMEOUT_DURATION=180

# System directories configuration (requires root privileges)
# Configuration directory for optimizer settings
OPTIMIZER_CONFIG_DIR="/etc/l4d2-optimizer"

# Data directory for runtime data and backups
OPTIMIZER_DATA_DIR="/var/lib/l4d2-optimizer"

# Log directory for system logs
OPTIMIZER_LOG_DIR="/var/log/l4d2-optimizer"

# Debug log settings (when OPTIMIZER_DEBUG=1)
# The debug.log file will be created in OPTIMIZER_LOG_DIR
OPTIMIZER_DEBUG_LOG_MAX_LINES=2000  # Maximum lines before log rotation

# ============================================================================
# MODULE CONFIGURATION 
# ============================================================================

# Network Module Configuration
# DNS configuration for dns_optimizer.sh module
NETWORK_DNS_PROVIDER="cloudflare"  # Options: google, cloudflare, opendns, quad9, custom
NETWORK_DNS_CUSTOM_PRIMARY="8.8.8.8"     # Used only when NETWORK_DNS_PROVIDER=custom
NETWORK_DNS_CUSTOM_SECONDARY="8.8.4.4"   # Used only when NETWORK_DNS_PROVIDER=custom

# IPv6 configuration for ipv6_disable.sh module
NETWORK_IPV6_DISABLE_METHOD="both"    # Options: sysctl, grub, both
NETWORK_IPV6_GRUB_UPDATE="true"       # Whether to modify GRUB configuration

# Advanced network configuration for network_advanced.sh module
NETWORK_QDISC_TYPE="fq_codel"         # Options: fq_codel, fq, pfifo_fast
NETWORK_MTU_SIZE="9000"               # MTU size (1500 for standard, 9000 for jumbo frames)
NETWORK_DISABLE_OFFLOADS="true"       # Disable GRO/GSO/TSO offloads
NETWORK_TARGET_INTERFACE="auto"       # Network interface (auto for auto-detection)

# Base network configuration for network_base.sh module
NETWORK_RMEM_MAX="262144"             # Maximum receive buffer size
NETWORK_WMEM_MAX="262144"             # Maximum send buffer size
NETWORK_NETDEV_BACKLOG="5000"         # Network device backlog size

# TCP/UDP configuration for tcp_udp_params.sh module
NETWORK_TCP_CONGESTION="bbr"          # TCP congestion control (bbr, cubic, reno)
NETWORK_TCP_MTU_PROBING="1"           # TCP MTU probing (0=disabled, 1=enabled, 2=always)
NETWORK_OPTMEM_MAX="81920"            # Maximum ancillary buffer size
NETWORK_UDP_MEM="65536 131072 262144" # UDP memory limits (min pressure max)
NETWORK_UDP_RMEM_MIN="8192"           # Minimum UDP receive buffer
NETWORK_UDP_WMEM_MIN="8192"           # Minimum UDP write buffer

# Memory Module Configuration
MEMORY_SWAPPINESS="10"                # Default: 60, Lower values = less swap usage
MEMORY_OVERCOMMIT_MEMORY="1"          # 0=disabled, 1=enabled, 2=strict

# THP configuration for thp_disable.sh module
MEMORY_THP_MODE="never"               # Transparent HugePages mode (always, madvise, never)
MEMORY_THP_SERVICE_CREATE="true"      # Create systemd service for persistence

# Disk Module Configuration
# Disk configuration for disk_opt.sh module
DISK_SCHEDULER="mq-deadline"          # I/O scheduler (mq-deadline, none, kyber, bfq)
DISK_TARGET_DEVICE="auto"             # Target device (auto for auto-detection, or /dev/sdX)
DISK_UPDATE_GRUB="true"               # Whether to update GRUB configuration

# CPU Module Configuration
CPU_IRQ_BALANCE_ENABLED="true"        # Enable IRQ balancing across CPUs
CPU_RPS_ENABLED="true"                # Enable Receive Packet Steering

# System behavior
OPTIMIZER_ENABLE_COLORS="true"        # Enable/disable colored terminal output
OPTIMIZER_VERBOSE_OUTPUT="false"      # Show detailed execution information
OPTIMIZER_DRY_RUN="false"             # Test mode - show what would be done without executing

# Backup system configuration  
OPTIMIZER_BACKUP_ENABLED="true"       # Enable/disable backup system globally
OPTIMIZER_BACKUP_COMPRESS="false"     # Compress backup files to save space

# Safety features
OPTIMIZER_REQUIRE_CONFIRMATION="true" # Ask for confirmation before major changes
OPTIMIZER_SKIP_SYSTEM_CHECKS="false"  # Skip system compatibility checks (advanced users only)

# ============================================================================
# USAGE INSTRUCTIONS
# ============================================================================
# 
# 1. Copy this file to .env in the same directory:
#    cp .env.example .env
#
# 2. Modify the values according to your needs
#
# 3. Run the optimizer:
#    sudo bash main.sh
#
# 4. Variables are grouped by category:
#    - OPTIMIZER_* : System-wide settings
#    - NETWORK_*   : Network-related modules
#    - MEMORY_*    : Memory-related modules  
#    - DISK_*      : Disk-related modules
#    - CPU_*       : CPU-related modules
#
# 5. All variables have sensible defaults, you only need to modify
#    the ones you want to customize for your specific environment
#
# ============================================================================
